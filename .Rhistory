filter(avg_speed == max(avg_speed))
View(fastest_city)
View(fastest_city)
# Which city was flown to with the highest average speed?
fastest_city <- flights %>%
mutate(speed = distance / air_time * 60) %>%
group_by(dest) %>%
summarise(avg_speed = mean(speed, na.rm = TRUE)) %>%
filter(avg_speed == max(avg_speed))
View(fastest_city)
View(fastest_city)
# Which city was flown to with the highest average speed?
fastest_city <- flights %>%
mutate(speed = distance / air_time * 60) %>%
group_by(dest) %>%
summarise(avg_speed = mean(speed, na.rm = TRUE)) %>%
filter(avg_speed == max(avg_speed, na.rm = TRUE))
View(fastest_city)
View(fastest_city)
# Install the `"nycflights13"` package. Load (`library()`) the package.
# You'll also need to load `dplyr`
#install.packages("nycflights13")  # should be done already
library("nycflights13")
library("dplyr")
# Create a dataframe of the average arrival delays for each _destination_, then
# use `left_join()` to join on the "airports" dataframe, which has the airport
# information
# Which airport had the largest average arrival delay?
largest_arr_delay <- flights %>%
group_by(dest) %>%
summarize(mean_arr_delay = mean(arr_delay, na.rm = TRUE)) %>%
mutate(faa = dest) %>%
left_join(airports) %>%
filter(mean_arr_delay == max(mean_arr_delay, na.rm = TRUE))
View(largest_arr_delay)
View(largest_arr_delay)
# Create a dataframe of the average arrival delay for each _airline_, then use
# `left_join()` to join on the "airlines" dataframe
# Which airline had the smallest average arrival delay?
smallest_arr_delay <- flights %>%
group_by(carrier) %>%
summarize(mean_arr_delay = mean(arr_delay, na.rm = TRUE)) %>%
left_join(airlines) %>%
filter(mean_arr_delay == min(mean_arr_delay, na.rm = TRUE))
View(smallest_arr_delay)
View(smallest_arr_delay)
setwd("~/info 201/info-201-final-project")
source('~/info 201/info-201-final-project/scripts/chart_2.R')
ratings_plot(amazon_data, disney_data, netflix_data)
library("styler")
library("lintr")
style_file("chart_2.R")
setwd("~/info 201/info-201-final-project/scripts")
style_file("chart_2.R")
style_file("chart_2.R")
lint("chart_2.R")
lint("chart_2.R")
lint("chart_2.R")
netflix_2_data <- read.csv("data/netflix_movies_and_tv_imdb_ratings.csv", stringsAsFactors = FALSE)
setwd("~/info 201/info-201-final-project")
netflix_2_data <- read.csv("data/netflix_movies_and_tv_imdb_ratings.csv", stringsAsFactors = FALSE)
disney_data <- read.csv("data/disney_plus_shows.csv", stringsAsFactors = FALSE)
amazon_data <- read.csv("data/amazon_prime_tv_shows.csv", stringsAsFactors = FALSE)
imdb_ratings_plot(disney_data, netflix_2_data)
imdb_ratings_plot <- function(disney_data, netflix_2_data) {
rating_by_runtime <- disney_data %>% # organizing rating by run time for plot
filter(
type == "movie", imdb_rating != "", imdb_rating != "N/A",
runtime != "N/A"
) %>%
select(runtime, imdb_rating) %>%
mutate(imdb_rating = as.double(imdb_rating), source = "Disney Plus") %>%
bind_rows(summarise(filter(netflix_2_data, type == "Movie"),
runtime = duration,
imdb_rating = rating,
source = "Netflix"
)) %>%
filter(!is.na(runtime), !is.na(imdb_rating)) %>%
mutate(runtime = as.numeric(str_remove_all(runtime, " min"))) %>%
filter(source == "Netflix") %>%
bind_rows(filter(rating_by_runtime, source == "Disney Plus"))
ggplot(data = rating_by_runtime) + # organizing ratings by year for plot
geom_point(aes(
x = imdb_rating,
y = runtime,
group = source,
color = source,
shape = source
)) +
labs(
title = "Movies On Netflix and Disney+ By Rating and Duration",
x = "IMDB Movie Rating",
y = "Movie Runtime",
color = "Streaming Platforms",
shape = "Streaming Platforms"
) +
scale_color_manual(values = c("goldenrod1", "skyblue3")) +
theme(axis.text.x.bottom = element_text(size = 10))
}
imdb_ratings_plot(disney_data, netflix_2_data)
imdb_ratings_plot <- function(disney_data, netflix_2_data) {
rating_by_runtime <- disney_data %>% # organizing rating by run time for plot
filter(
type == "movie", imdb_rating != "", imdb_rating != "N/A",
runtime != "N/A"
) %>%
select(runtime, imdb_rating) %>%
mutate(imdb_rating = as.double(imdb_rating), source = "Disney Plus") %>%
bind_rows(summarise(filter(netflix_2_data, type == "Movie"),
runtime = duration,
imdb_rating = rating,
source = "Netflix"
)) %>%
filter(!is.na(runtime), !is.na(imdb_rating)) %>%
mutate(runtime = as.numeric(str_remove_all(runtime, " min")))
# organizing "Disney Plus" and "Netflix" for plot
rating_by_runtime_ordered <- rating_by_runtime %>%
filter(source == "Netflix") %>%
bind_rows(filter(rating_by_runtime, source == "Disney Plus"))
# line plot of ratings by run time
ggplot(data = rating_by_runtime) +
geom_point(aes(
x = imdb_rating,
y = runtime,
group = source,
color = source,
shape = source
)) +
labs(
title = "Movies On Netflix and Disney+ By Rating and Duration",
x = "IMDB Movie Rating",
y = "Movie Runtime",
color = "Streaming Platforms",
shape = "Streaming Platforms"
) +
scale_color_manual(values = c("goldenrod1", "skyblue3")) +
theme(axis.text.x.bottom = element_text(size = 10))
}
imdb_ratings_plot(disney_data, netflix_2_data)
imdb_ratings_plot <- function(disney_data, netflix_2_data) {
rating_by_runtime <- disney_data %>% # organizing rating by run time for plot
filter(
type == "movie", imdb_rating != "", imdb_rating != "N/A",
runtime != "N/A"
) %>%
select(runtime, imdb_rating) %>%
mutate(imdb_rating = as.double(imdb_rating), source = "Disney Plus") %>%
bind_rows(summarise(filter(netflix_2_data, type == "Movie"),
runtime = duration,
imdb_rating = rating,
source = "Netflix"
)) %>%
filter(!is.na(runtime), !is.na(imdb_rating)) %>%
mutate(runtime = as.numeric(str_remove_all(runtime, " min")))
# organizing "Disney Plus" and "Netflix" for plot
rating_by_runtime_ordered <- rating_by_runtime %>%
filter(source == "Netflix") %>%
bind_rows(filter(rating_by_runtime, source == "Disney Plus"))
# line plot of ratings by run time
ggplot(data = rating_by_runtime_ordered) +
geom_point(aes(
x = imdb_rating,
y = runtime,
group = source,
color = source,
shape = source
)) +
labs(
title = "Movies On Netflix and Disney+ By Rating and Duration",
x = "IMDB Movie Rating",
y = "Movie Runtime",
color = "Streaming Platforms",
shape = "Streaming Platforms"
) +
scale_color_manual(values = c("goldenrod1", "skyblue3")) +
theme(axis.text.x.bottom = element_text(size = 10))
}
imdb_ratings_plot(disney_data, netflix_2_data)
lint("chart_2.R")
setwd("~/info 201/info-201-final-project/scripts")
lint("chart_3.R")
style_file("chart_3.R")
lint("chart_3.R")
netflix_data_2 <- read.csv("data/netflix_movies_and_tv_imdb_ratings.csv", stringsAsFactors = FALSE)
netflix_2_data <- read.csv("data/netflix_movies_and_tv_imdb_ratings.csv", stringsAsFactors = FALSE)
imdb_ratings_plot <- function(disney_data, netflix_2_data) {
rating_by_runtime <- disney_data %>% # organizing rating by run time for plot
filter(
type == "movie", imdb_rating != "", imdb_rating != "N/A",
runtime != "N/A"
) %>%
select(runtime, imdb_rating) %>%
mutate(imdb_rating = as.double(imdb_rating), source = "Disney Plus") %>%
bind_rows(summarise(filter(netflix_2_data, type == "Movie"),
runtime = duration,
imdb_rating = rating,
source = "Netflix"
)) %>%
filter(!is.na(runtime), !is.na(imdb_rating)) %>%
mutate(runtime = as.numeric(str_remove_all(runtime, " min")))
# organizing "Disney Plus" and "Netflix" for plot
rating_by_runtime_ordered <- rating_by_runtime %>%
filter(source == "Netflix") %>%
bind_rows(filter(rating_by_runtime, source == "Disney Plus"))
# line plot of ratings by run time
ggplot(data = rating_by_runtime_ordered) +
geom_point(aes(
x = imdb_rating,
y = runtime,
group = source,
color = source,
shape = source
)) +
labs(
title = "Movies On Netflix and Disney+ By Rating and Duration",
x = "IMDB Movie Rating",
y = "Movie Runtime",
color = "Streaming Platforms",
shape = "Streaming Platforms"
) +
scale_color_manual(values = c("goldenrod1", "skyblue3")) +
theme(axis.text.x.bottom = element_text(size = 10))
}
ratings_plot <- function(amazon_data, disney_data, netflix_data) {
# filtering for year and rating
all_ratings <- amazon_data %>%
select(Year.of.release, Age.of.viewers) %>%
summarise(year = as.character(Year.of.release), rated = Age.of.viewers) %>%
bind_rows(select(disney_data, year, rated)) %>%
filter(year == substr(year, start = 1, stop = 4)) %>%
summarise(release_year = as.numeric(year), rating = rated) %>%
bind_rows(select(netflix_data, release_year, rating))
# standardizing the rating
mpa_film_ratings <- all_ratings %>%
pull(rating) %>%
str_replace_all(c(
"TV-G" = "G", "TV-Y" = "G", "All" = "G", "TV-PG" = "PG",
"TV-Y7" = "PG", "TV-Y7-FV" = "PG", "7+" = "PG",
"TV-14" = "PG-13", "13+" = "PG-13", "16+" = "PG-13",
"PG-PG-13" = "PG-13", "TV-MA" = "R", "18+" = "R",
"NC-1PG" = "NC-17", "GPG-FV" = "PG", "GPG" = "PG"
)) %>%
as.data.frame() %>%
bind_cols(select(all_ratings, release_year)) %>%
rename(., rated = ., year = release_year)
# organizing ratings by year for plot
ratings_by_year <- mpa_film_ratings %>%
group_by(year) %>%
summarise(
num_rated = coalesce(table(rated == "G")["TRUE"], 0),
mpa_rating = "G"
) %>%
bind_rows(group_by(mpa_film_ratings, year) %>%
summarise(
num_rated = coalesce(table(rated == "PG")["TRUE"], 0)
+ coalesce(table(rated == "PG+")["TRUE"], 0),
mpa_rating = "PG"
)) %>%
bind_rows(group_by(mpa_film_ratings, year) %>%
summarise(
num_rated = coalesce(
table(rated == "PG-13")["TRUE"],
0
)
+ coalesce(table(rated == "PG-13+")["TRUE"], 0),
mpa_rating = "PG-13"
)) %>%
bind_rows(group_by(mpa_film_ratings, year) %>%
summarise(
num_rated = coalesce(table(rated == "R")["TRUE"], 0)
+ coalesce(table(rated == "R+")["TRUE"], 0),
mpa_rating = "R"
)) %>%
bind_rows(group_by(mpa_film_ratings, year) %>%
summarise(
num_rated = coalesce(
table(rated == "NC-17")["TRUE"],
0
),
mpa_rating = "NC-17"
)) %>%
filter(!is.na(year))
# line plot of ratings by year
ggplot(data = ratings_by_year, aes(
x = year,
y = num_rated,
group = mpa_rating
)) +
geom_line(aes(color = mpa_rating)) +
geom_point(aes(color = mpa_rating)) +
labs(
title = paste(
"Content On Netflix, Amazon Prime, and Disney+",
"By Age Demographic and Release Year"
),
x = "Release Year",
y = "# Of Movies/Shows (Content)",
color = "Rating"
) +
scale_color_manual(
values = c("#5ab4ac", "coral", "maroon", "firebrick1", "olivedrab4")
) +
theme(axis.text.x.bottom = element_text(size = 10))
}
View(amazon_data)
View(disney_data)
View(netflix_2_data)
View(netflix_data)
setwd("~/info 201/info-201-final-project")
source("scripts/chart_1.R")
source("scripts/chart_2.R")
#other sources go here
amazon_data <- read.csv("data/amazon_prime_tv_shows.csv", stringsAsFactors = FALSE)
disney_data <- read.csv("data/disney_plus_shows.csv", stringsAsFactors = FALSE)
netflix_data <- read.csv("data/netflix_movies_and_tv.csv", stringsAsFactors = FALSE)
netflix_2_data <- read.csv("data/netflix_movies_and_tv_imdb_ratings.csv", stringsAsFactors = FALSE)
knitr::opts_chunk$set(echo = TRUE)
chart_1(netflix_data, disney_data, amazon_data)
amazon_data <- read.csv("data/amazon_prime_tv_shows.csv", stringsAsFactors = FALSE)
disney_data <- read.csv("data/disney_plus_shows.csv", stringsAsFactors = FALSE)
netflix_data <- read.csv("data/netflix_movies_and_tv.csv", stringsAsFactors = FALSE)
netflix_2_data <- read.csv("data/netflix_movies_and_tv_imdb_ratings.csv", stringsAsFactors = FALSE)
View(amazon_data)
View(amazon_data)
ratings_plot <- function(amazon_data, disney_data, netflix_data) {
# filtering for year and rating
all_ratings <- amazon_data %>%
select(Year.of.release, Age.of.viewers) %>%
summarise(year = as.character(Year.of.release), rated = Age.of.viewers) %>%
bind_rows(select(disney_data, year, rated)) %>%
filter(year == substr(year, start = 1, stop = 4)) %>%
summarise(release_year = as.numeric(year), rating = rated) %>%
bind_rows(select(netflix_data, release_year, rating))
# standardizing the rating
mpa_film_ratings <- all_ratings %>%
pull(rating) %>%
str_replace_all(c(
"TV-G" = "G", "TV-Y" = "G", "All" = "G", "TV-PG" = "PG",
"TV-Y7" = "PG", "TV-Y7-FV" = "PG", "7+" = "PG",
"TV-14" = "PG-13", "13+" = "PG-13", "16+" = "PG-13",
"PG-PG-13" = "PG-13", "TV-MA" = "R", "18+" = "R",
"NC-1PG" = "NC-17", "GPG-FV" = "PG", "GPG" = "PG"
)) %>%
as.data.frame() %>%
bind_cols(select(all_ratings, release_year)) %>%
rename(., rated = ., year = release_year)
# organizing ratings by year for plot
ratings_by_year <- mpa_film_ratings %>%
group_by(year) %>%
summarise(
num_rated = coalesce(table(rated == "G")["TRUE"], 0),
mpa_rating = "G"
) %>%
bind_rows(group_by(mpa_film_ratings, year) %>%
summarise(
num_rated = coalesce(table(rated == "PG")["TRUE"], 0)
+ coalesce(table(rated == "PG+")["TRUE"], 0),
mpa_rating = "PG"
)) %>%
bind_rows(group_by(mpa_film_ratings, year) %>%
summarise(
num_rated = coalesce(
table(rated == "PG-13")["TRUE"],
0
)
+ coalesce(table(rated == "PG-13+")["TRUE"], 0),
mpa_rating = "PG-13"
)) %>%
bind_rows(group_by(mpa_film_ratings, year) %>%
summarise(
num_rated = coalesce(table(rated == "R")["TRUE"], 0)
+ coalesce(table(rated == "R+")["TRUE"], 0),
mpa_rating = "R"
)) %>%
bind_rows(group_by(mpa_film_ratings, year) %>%
summarise(
num_rated = coalesce(
table(rated == "NC-17")["TRUE"],
0
),
mpa_rating = "NC-17"
)) %>%
filter(!is.na(year))
# line plot of ratings by year
ggplot(data = ratings_by_year, aes(
x = year,
y = num_rated,
group = mpa_rating
)) +
geom_line(aes(color = mpa_rating)) +
geom_point(aes(color = mpa_rating)) +
labs(
title = paste(
"Content On Netflix, Amazon Prime, and Disney+",
"By Age Demographic and Release Year"
),
x = "Release Year",
y = "# Of Movies/Shows (Content)",
color = "Rating"
) +
scale_color_manual(
values = c("#5ab4ac", "coral", "maroon", "firebrick1", "olivedrab4")
) +
theme(axis.text.x.bottom = element_text(size = 10))
}
source('~/info 201/info-201-final-project/scripts/chart_2.R')
source('~/info 201/info-201-final-project/scripts/chart_3.R')
amazon_data <- read.csv("data/amazon_prime_tv_shows.csv", stringsAsFactors = FALSE)
disney_data <- read.csv("data/disney_plus_shows.csv", stringsAsFactors = FALSE)
netflix_data <- read.csv("data/netflix_movies_and_tv.csv", stringsAsFactors = FALSE)
netflix_2_data <- read.csv("data/netflix_movies_and_tv_imdb_ratings.csv", stringsAsFactors = FALSE)
ratings_plot(netflix_data, disney_data, amazon_data)
View(amazon_data)
ratings_plot(netflix_data, disney_data, amazon_data)
ratings_plot(netflix_data, disney_data, amazon_data)
ratings_plot(netflix_data, disney_data, amazon_data)
setwd("~/info 201/info-201-final-project/scripts")
ratings_plot(netflix_data, disney_data, amazon_data)
setwd("~/info 201/info-201-final-project")
ratings_plot(netflix_data, disney_data, amazon_data)
# filtering for year and rating
all_ratings <- amazon_data %>%
select(Age.of.viewers, Year.of.release) %>%
summarise(year = as.character(Year.of.release), rated = Age.of.viewers) %>%
bind_rows(select(disney_data, year, rated)) %>%
filter(year == substr(year, start = 1, stop = 4)) %>%
summarise(release_year = as.numeric(year), rating = rated) %>%
bind_rows(select(netflix_data, release_year, rating))
ratings_plot(netflix_data, disney_data, amazon_data)
ratings_plot <- function(amazon_data, disney_data, netflix_data) {
# filtering for year and rating
all_ratings <- amazon_data %>%
select(Year.of.release, Age.of.viewers) %>%
summarise(year = as.character(Year.of.release), rated = Age.of.viewers) %>%
bind_rows(select(disney_data, year, rated)) %>%
filter(year == substr(year, start = 1, stop = 4)) %>%
summarise(release_year = as.numeric(year), rating = rated) %>%
bind_rows(select(netflix_data, release_year, rating))
# standardizing the rating
mpa_film_ratings <- all_ratings %>%
pull(rating) %>%
str_replace_all(c(
"TV-G" = "G", "TV-Y" = "G", "All" = "G", "TV-PG" = "PG",
"TV-Y7" = "PG", "TV-Y7-FV" = "PG", "7+" = "PG",
"TV-14" = "PG-13", "13+" = "PG-13", "16+" = "PG-13",
"PG-PG-13" = "PG-13", "TV-MA" = "R", "18+" = "R",
"NC-1PG" = "NC-17", "GPG-FV" = "PG", "GPG" = "PG"
)) %>%
as.data.frame() %>%
bind_cols(select(all_ratings, release_year)) %>%
rename(., rated = ., year = release_year)
# organizing ratings by year for plot
ratings_by_year <- mpa_film_ratings %>%
group_by(year) %>%
summarise(
num_rated = coalesce(table(rated == "G")["TRUE"], 0),
mpa_rating = "G"
) %>%
bind_rows(group_by(mpa_film_ratings, year) %>%
summarise(
num_rated = coalesce(table(rated == "PG")["TRUE"], 0)
+ coalesce(table(rated == "PG+")["TRUE"], 0),
mpa_rating = "PG"
)) %>%
bind_rows(group_by(mpa_film_ratings, year) %>%
summarise(
num_rated = coalesce(
table(rated == "PG-13")["TRUE"],
0
)
+ coalesce(table(rated == "PG-13+")["TRUE"], 0),
mpa_rating = "PG-13"
)) %>%
bind_rows(group_by(mpa_film_ratings, year) %>%
summarise(
num_rated = coalesce(table(rated == "R")["TRUE"], 0)
+ coalesce(table(rated == "R+")["TRUE"], 0),
mpa_rating = "R"
)) %>%
bind_rows(group_by(mpa_film_ratings, year) %>%
summarise(
num_rated = coalesce(
table(rated == "NC-17")["TRUE"],
0
),
mpa_rating = "NC-17"
)) %>%
filter(!is.na(year))
# line plot of ratings by year
ggplot(data = ratings_by_year, aes(
x = year,
y = num_rated,
group = mpa_rating
)) +
geom_line(aes(color = mpa_rating)) +
geom_point(aes(color = mpa_rating)) +
labs(
title = paste(
"Content On Netflix, Amazon Prime, and Disney+",
"By Age Demographic and Release Year"
),
x = "Release Year",
y = "# Of Movies/Shows (Content)",
color = "Rating"
) +
scale_color_manual(
values = c("#5ab4ac", "coral", "maroon", "firebrick1", "olivedrab4")
) +
theme(axis.text.x.bottom = element_text(size = 10))
}
ratings_plot(netflix_data, disney_data, amazon_data)
View(amazon_data)
