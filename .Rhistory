) %>%
arrange(desc(imdb_rating))
summary_table <- disney_df %>%
group_by(year) %>%
drop_na() %>%
na.omit() %>%
filter(!(plot == "N/A" | imdb_rating == "N/A" | imdb_votes == "N/A" | awards == "N/A"
| country == "N/A" | language == "N/A" | actors == "N/A" | writer == "N/A"
| director == "N/A" | genre == "N/A" | runtime == "N/A" | released_at == "N/A"
| rated == "N/A" | metascore == "N/A" | imdb_id == "")
) %>%
mutate(
imdb_rating = as.numeric(imdb_rating)
) %>%
summarise(
total_movies = n(),
highest_rating = max(imdb_rating, na.rm = TRUE),
lowest_rating = min(imdb_rating, na.rm = TRUE),
most_common_language = max(language, na.rm = TRUE),
most_common_rating = max(rated, na.rm = TRUE),
) %>%
arrange(desc(imdb_rating))
summary_table <- disney_df %>%
group_by(year) %>%
drop_na() %>%
na.omit() %>%
filter(!(plot == "N/A" | imdb_rating == "N/A" | imdb_votes == "N/A" | awards == "N/A"
| country == "N/A" | language == "N/A" | actors == "N/A" | writer == "N/A"
| director == "N/A" | genre == "N/A" | runtime == "N/A" | released_at == "N/A"
| rated == "N/A" | metascore == "N/A" | imdb_id == "")
) %>%
mutate(
imdb_rating = as.numeric(imdb_rating)
) %>%
summarise(
total_movies = n(),
highest_rating = max(imdb_rating, na.rm = TRUE),
lowest_rating = min(imdb_rating, na.rm = TRUE),
most_common_language = max(language, na.rm = TRUE),
most_common_rating = max(rated, na.rm = TRUE),
) %>%
arrange(desc(imdb_rating))
summary_table <- disney_df %>%
group_by(year) %>%
drop_na() %>%
na.omit() %>%
filter(!(plot == "N/A" | imdb_rating == "N/A" | imdb_votes == "N/A" | awards == "N/A"
| country == "N/A" | language == "N/A" | actors == "N/A" | writer == "N/A"
| director == "N/A" | genre == "N/A" | runtime == "N/A" | released_at == "N/A"
| rated == "N/A" | metascore == "N/A" | imdb_id == "")
) %>%
summarise(
total_movies = n(),
highest_rating = max(imdb_rating, na.rm = TRUE),
lowest_rating = min(imdb_rating, na.rm = TRUE),
most_common_language = max(language, na.rm = TRUE),
most_common_rating = max(rated, na.rm = TRUE),
) %>%
arrange(desc(imdb_rating))
summary_table <- disney_df %>%
group_by(year) %>%
drop_na() %>%
na.omit() %>%
filter(!(plot == "N/A" | imdb_rating == "N/A" | imdb_votes == "N/A" | awards == "N/A"
| country == "N/A" | language == "N/A" | actors == "N/A" | writer == "N/A"
| director == "N/A" | genre == "N/A" | runtime == "N/A" | released_at == "N/A"
| rated == "N/A" | metascore == "N/A" | imdb_id == "")
) %>%
summarise(
total_movies = n(),
highest_rating = max(imdb_rating, na.rm = TRUE),
lowest_rating = min(imdb_rating, na.rm = TRUE),
most_common_language = max(language, na.rm = TRUE),
most_common_rating = max(rated, na.rm = TRUE),
) %>%
arrange(desc(imdb_rating))
summary_table <- disney_df %>%
group_by(year) %>%
drop_na() %>%
na.omit() %>%
filter(!(plot == "N/A" | imdb_rating == "N/A" | imdb_votes == "N/A" | awards == "N/A"
| country == "N/A" | language == "N/A" | actors == "N/A" | writer == "N/A"
| director == "N/A" | genre == "N/A" | runtime == "N/A" | released_at == "N/A"
| rated == "N/A" | metascore == "N/A" | imdb_id == "")
) %>%
summarise(
total_movies = n(),
highest_rating = max(imdb_rating, na.rm = TRUE),
lowest_rating = min(imdb_rating, na.rm = TRUE),
most_common_language = max(language, na.rm = TRUE),
most_common_rating = max(rated, na.rm = TRUE),
) %>%
arrange(desc(imdb_rating))
summary_table <- disney_df %>%
group_by(year) %>%
drop_na() %>%
na.omit() %>%
filter(!(plot == "N/A" | imdb_rating == "N/A" | imdb_votes == "N/A" | awards == "N/A"
| country == "N/A" | language == "N/A" | actors == "N/A" | writer == "N/A"
| director == "N/A" | genre == "N/A" | runtime == "N/A" | released_at == "N/A"
| rated == "N/A" | metascore == "N/A" | imdb_id == "")
) %>%
summarise(
total_movies = n(),
highest_rating = max(imdb_rating, na.rm = TRUE),
lowest_rating = min(imdb_rating, na.rm = TRUE),
most_common_language = max(language, na.rm = TRUE),
most_common_rating = max(rated, na.rm = TRUE),
) %>%
arrange(desc(imdb_rating))
summary_table <- disney_df %>%
group_by(year) %>%
drop_na() %>%
na.omit() %>%
filter(!(plot == "N/A" | imdb_rating == "N/A" | imdb_votes == "N/A" | awards == "N/A"
| country == "N/A" | language == "N/A" | actors == "N/A" | writer == "N/A"
| director == "N/A" | genre == "N/A" | runtime == "N/A" | released_at == "N/A"
| rated == "N/A" | metascore == "N/A" | imdb_id == "")
) %>%
summarise(
total_movies = n(),
highest_rating = max(imdb_rating, na.rm = TRUE),
lowest_rating = min(imdb_rating, na.rm = TRUE),
most_common_language = max(language, na.rm = TRUE),
most_common_rating = max(rated, na.rm = TRUE),
) %>%
arrange(-imdb_rating)
summary_table <- disney_df %>%
group_by(year) %>%
drop_na() %>%
na.omit() %>%
filter(!(plot == "N/A" | imdb_rating == "N/A" | imdb_votes == "N/A" | awards == "N/A"
| country == "N/A" | language == "N/A" | actors == "N/A" | writer == "N/A"
| director == "N/A" | genre == "N/A" | runtime == "N/A" | released_at == "N/A"
| rated == "N/A" | metascore == "N/A" | imdb_id == "")
) %>%
summarise(
total_movies = n(),
highest_rating = max(imdb_rating, na.rm = TRUE),
lowest_rating = min(imdb_rating, na.rm = TRUE),
most_common_language = max(language, na.rm = TRUE),
most_common_rating = max(rated, na.rm = TRUE),
) %>%
arrange(year)
View(amazon_df)
amazon_df %>%
rename(
IMDb.rating = imdb_rating,
Genre = genre,
Language = language,
Year.of.release = year
)
amazon_df %>%
rename(
imdb_rating = IMDb.rating,
genre = Genre,
language = Language,
year = Year.of.release
)
View(amazon_df)
amazon_df <- amazon_df %>%
rename(
imdb_rating = IMDb.rating,
genre = Genre,
language = Language,
year = Year.of.release
)
View(amazon_df)
setwd("C:/Users/lil.khrist/code/info-201-final-project/scripts")
summary_table <- function(dataset) {
get_summary <- dataset %>%
group_by(year) %>%
drop_na() %>%
na.omit() %>%
filter(!(plot == "N/A" | imdb_rating == "N/A" | imdb_votes == "N/A" | awards == "N/A"
| country == "N/A" | language == "N/A" | actors == "N/A" | writer == "N/A"
| director == "N/A" | genre == "N/A" | runtime == "N/A" | released_at == "N/A"
| rated == "N/A" | metascore == "N/A" | imdb_id == "")
) %>%
summarise(
total_movies = n(),
highest_rating = max(imdb_rating, na.rm = TRUE),
lowest_rating = min(imdb_rating, na.rm = TRUE),
most_common_language = max(language, na.rm = TRUE),
most_common_rating = max(rated, na.rm = TRUE),
most_common_genre = max(genre, na.rm = TRUE),
) %>%
arrange(year)
return(get_summary)
}
library("lintr")
library("dplyr")
library("lintr")
lint("summary_info.R")
lint("summary_info.R")
get_summ_info <- function(dataset_1, dataset_2, dataset_3, dataset_4) {
rating_1 <- mean(na.omit(dataset_1[["imdb_rating"]]))
rating_2 <- mean(na.omit(dataset_4[["rating"]]))
oldest_year_1 <- min(na.omit(dataset_1[["year"]]))
oldest_year_2 <- min(na.omit(dataset_3[["release_year"]]))
oy1_title <- dataset_1 %>%
filter(year == oldest_year_1) %>%
pull(title)
oy2_title <- dataset_3 %>%
filter(release_year == oldest_year_2) %>%
pull(title)
summ_list <- list(ama_avg_rating = rating_1, net_avg_rating = rating_2,
ama_old_year = oldest_year_1, net_old_year = oldest_year_2,
ama_old_title = oy1_title, net_old_title = oy2_title)
return(summ_list)
}
summ_info <- get_summ_info(amazon_data, disney_data,
netflix_data, netflix_2_data)
summ_info <- get_summ_info(amazon_data, disney_data,
netflix_data, netflix_2_data)
amazon_data <- read.csv("data/amazon_prime_tv_shows.csv"
, stringsAsFactors = FALSE)
disney_data <- read.csv("data/disney_plus_shows.csv"
, stringsAsFactors = FALSE)
netflix_data <- read.csv("data/netflix_movies_and_tv.csv"
, stringsAsFactors = FALSE)
netflix_2_data <- read.csv("data/netflix_movies_and_tv_imdb_ratings.csv",
stringsAsFactors = FALSE)
setwd("D:/Ryu's stuff/Ryu & Pla & Pradit/Documents/UW/Info201A/info-201-final-project")
amazon_data <- read.csv("data/amazon_prime_tv_shows.csv"
, stringsAsFactors = FALSE)
disney_data <- read.csv("data/disney_plus_shows.csv"
, stringsAsFactors = FALSE)
netflix_data <- read.csv("data/netflix_movies_and_tv.csv"
, stringsAsFactors = FALSE)
netflix_2_data <- read.csv("data/netflix_movies_and_tv_imdb_ratings.csv",
stringsAsFactors = FALSE)
#renamed amazon_data values for easier reference
amazon_data <- amazon_data %>%
rename(
year = Year.of.release,
seasons = No.of.seasons.available,
language = Language,
genre = Genre,
imdb_rating = IMDb.rating,
age_rating = Age.of.viewers
)
get_summ_info <- function(dataset_1, dataset_2, dataset_3, dataset_4) {
rating_1 <- mean(na.omit(dataset_1[["imdb_rating"]]))
rating_2 <- mean(na.omit(dataset_4[["rating"]]))
oldest_year_1 <- min(na.omit(dataset_1[["year"]]))
oldest_year_2 <- min(na.omit(dataset_3[["release_year"]]))
oy1_title <- dataset_1 %>%
filter(year == oldest_year_1) %>%
pull(title)
oy2_title <- dataset_3 %>%
filter(release_year == oldest_year_2) %>%
pull(title)
summ_list <- list(ama_avg_rating = rating_1, net_avg_rating = rating_2,
ama_old_year = oldest_year_1, net_old_year = oldest_year_2,
ama_old_title = oy1_title, net_old_title = oy2_title)
return(summ_list)
}
summ_info <- get_summ_info(amazon_data, disney_data,
netflix_data, netflix_2_data)
View(summ_info)
lint("summary_info.R")
lint("summary_info.R")
setwd("D:/Ryu's stuff/Ryu & Pla & Pradit/Documents/UW/Info201A/info-201-final-project/scripts")
lint("summary_info.R")
# We provide this line to delete all variables in your workspace.
# This will make it easier to test your script.
rm(list = ls())
source("app_ui.R")
setwd("C:/Users/Hanna/Desktop/info-201-final-project")
library("shiny")
library("plotly")
library("ggplot2")
library("plotly")
source("app_ui.R")
library("shiny")
library("plotly")
library("shinythemes")
# Chris' overview page --------
overview_page <- tabPanel(
"Data Visualization on Movies and TV Shows",
sidebarLayout(
overview_sidepanel,
overview_mainpanel
)
)
overview_sidepanel <- sidebarPanel(
h2("test"),
p("test test")
)
overview_mainpanel <- mainPanel(
h1("Overview"),
h2("Purpose:"),
p("This project's purpose is to analyze TV shows and movies from",
strong("Netflix"), ", ", strong("Amazon Prime"), ", and ", strong("Disney Plus"),
"to give ourselves further insight and reveal trends that
have developed over the years. "),
h4("These are the sources we have used in this project:"),
a("     1. Netflix data", href="https://www.kaggle.com/shivamb/netflix-shows"),
a("     2. Disney Plus data", href="https://www.kaggle.com/unanimad/disney-plus-shows"),
a("     3. Amazon Prime data", href="https://www.kaggle.com/nilimajauhari/amazon-prime-tv-shows"),
p("From this data observation, we will be able to answer
the following questions:"),
h5("What are the user demographics of various streaming platforms?
How have they changed over time?"),
h5("What genres are most popular on each streaming platform?
How have the popular genres changed over time?"),
h5("How have the duration, ratings, viewers, and genres of tv shows and movies
on various streaming platforms changed over the years? In 2020?"),
p("We will be using our skills that we've learned throughout this quarter to
analyze the datasets and obtain valuable information from them."),
)
# Chris' overview page --------
overview_page <- tabPanel(
"Data Visualization on Movies and TV Shows",
sidebarLayout(
overview_sidepanel,
overview_mainpanel
)
)
#creates side panel with widgets for chart 1 page
chart1_side_panel <- sidebarPanel(
selectInput(
inputId = "color",
label = "Chart Colors",
choices = list(
"Rainbow" = "Spectral",
"Red to Green" = "RdYlGn",
"Red to Blue" = "RdYlBu",
"Pink to Green" = "PiYG",
"Purple to Green" = "PRGn",
"Brown to Teal" = "BrBG",
"Random" = "Paired"
)
)
)
#creates main panel with actual bar graph for chart 1 page
chart1_main_panel <- mainPanel(
h1("What genres are most popular on each streaming platform?"),
h2("Do these align with other streaming platforms?"),
p("Our first question "),
plotlyOutput("chart1")
)
#creates the actual chart 1 page
chart_page_one <- tabPanel(
"Popularity of Genres for TV Shows",
sidebarLayout(
chart1_side_panel,
chart1_main_panel
)
)
#ui for creating shinyApp
ui <- fluidPage(
includeCSS("style.css"),
navbarPage(
"Streaming Services",
overview_page,
chart_page_one
)
)
library("dplyr")
library("ggplot2")
library("plotly")
library("shiny")
#read in datasets
amazon_data <- read.csv("data/amazon_prime_tv_shows.csv",
stringsAsFactors = FALSE
)
disney_data <- read.csv("data/disney_plus_shows.csv",
stringsAsFactors = FALSE
)
netflix_data <- read.csv("data/netflix_movies_and_tv.csv",
stringsAsFactors = FALSE
)
netflix_2_data <- read.csv("data/netflix_movies_and_tv_imdb_ratings.csv",
stringsAsFactors = FALSE
)
#read in chart files
source("scripts/chart_1.R")
source("scripts/chart_2.R")
source("scripts/chart_3.R")
server <- function(input, output) {
output$chart1 <- renderPlotly(
return(chart_1(netflix_data, disney_data, amazon_data, input$color))
)
}
source("app_ui.R")
source("app_server.R")
shinyApp(ui = ui, server = server)
overview_mainpanel <- mainPanel(
tags$h1("Overview"),
br(),
tags$img(src = "data/streaming_services", height = "100%", width = "100%"),
tags$h2("Purpose:"),
tags$p(
"This project's purpose is to analyze TV shows and movies from",
strong("Netflix"), ", ", strong("Amazon Prime"), ", and ",
strong("Disney Plus"),
"to give ourselves further insight and reveal trends that
have developed over the years. "
),
tags$h4("These are the sources we have used in this project:"),
tags$a("     1. Netflix data",
href = "https://www.kaggle.com/shivamb/netflix-shows"
),
tags$a("     2. Disney Plus data",
href = "https://www.kaggle.com/unanimad/disney-plus-shows"
),
tags$a("     3. Amazon Prime data",
href = "https://www.kaggle.com/nilimajauhari/amazon-prime-tv-shows"
),
tags$p("From this data observation, we will be able to answer
the following questions:"),
tags$h5("What are the user demographics of various streaming platforms?
How have they changed over time?"),
tags$h5("What genres are most popular on each streaming platform?
How have the popular genres changed over time?"),
tags$h5("How have the duration, ratings, viewers, and genres of tv shows and movies
on various streaming platforms changed over the years? In 2020?"),
tags$p("We will be using our skills that we've learned throughout this quarter to
analyze the datasets and obtain valuable information from them."),
)
overview_page <- tabPanel(
"Overview",
sidebarLayout(
overview_sidepanel,
overview_mainpanel
)
)
shiny::runApp()
runApp()
# Chris' overview page --------
overview_sidepanel <- sidebarPanel(
tags$p(strong("Page one: Genres"), "What genres are most popular on each
streaming platform?"),
tags$p(strong("Page 2: Age Trends"), "What trends have emerged in producing
content for each age demographic?"),
tags$p(strong("Page 3: ---"), "---"),
tags$ul(
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
View(netflix_2_data)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
<<<<<<< HEAD
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
=======
library("lintr")
setwd("C:/Users/lil.khrist/code/info-201-final-project")
lint("app_ui.R")
lint("app_ui.R")
lint("app_ui.R")
setwd("C:/Users/lil.khrist/code/info-201-final-project")
lint("app_ui.R")
lint("app_server.R")
setwd("C:/Users/lil.khrist/code/info-201-final-project")
lint("app_server.R")
>>>>>>> 2d32f8a947e7e5c3ff8ab9daf77508a90a37402a
shiny::runApp()
shiny::runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
